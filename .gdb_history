exit
b 128
r
n
s
n
s
s
s
list
n
s
n
l
p this
p *this
p *thisclear
exit
r
b 137
r
s
n
s
s
s
l
p this->peek_char()
p this
p *this
lis
frame
n
s
s
list
n
n
n
list
s
s
p this->de.peek_char()
n
p this->first
n
n
s
s
s
p this
p this->input 
list
s
n
n
p fst::str(this->input, end - this->input)
p fst::str(this->input, end - this->input)
p end
p this->input
p end - this-input
p end - this->input
p fst::str(this->input, end - this->input)
p fst::str(this->input, (end - this->input))
s
p res
n
p res
n
p this->input
n
n
list
n
list
n
p key
list
n
s
p key.unwrap()
n
n
n
p r
n
list
n
n
n
n
exit
b 43
r
s
type(V)
p type(V)
p type(V())
p typeof
p typeof 5
p typeof (5)
ptype V
s
ptype de
p de.peek_char()
l
n
s
s
s
n
p neg
n
s
n
p ch
n
exit
b 137
r
s
n
s
s
s
n
s
s
n
n
l
n
s
s
n
n
n
s
s
s
s
n
n
n
n
p res
n
p this->input 
n
n
n
n
l
n
n
n
l
n
s
s
n
l
s
s
s
n
n
s
n
p ch
n
n
p res
n
n
p ch
l
p this->peek_char()
n
p res
p neg
n
n
l
n
n
p
l
p r
n
n
s
s
p this->de.input 
n
p first 
n
n
s
s
s
s
p this->input 
n
n
n
n
p res
n
p this->input 
n
n
n
n
n
n
l
n
p key
n
l
n
n
n
n
n
n
p err
exit()
exit
exit()
exit
r
exit()
exit()
exit
r
exit
r
exit
r
b 94
r
p value
r
continue 
p value
p value == "r"
p value.equals("r")
p value.equals(fst::str("r"))
p value.equals(fst::str("r", 1))
p value.equals(str("r", 1))
p fst::str("r")
p fst::str('r')
p fst::str(\"r\")
exit
